{"version":3,"sources":["contexts/Search.js","components/Search.js","hooks/useSearch.js","components/Album.js","components/Albums.js","App.js","index.js"],"names":["SearchContext","createContext","SearchContextProvider","props","useState","searchInput","setSearchInput","Provider","value","children","Search","useContext","className","onKeyDown","e","keyCode","target","placeholder","cancel","CancelToken","axios","useSearch","albums","setAlbums","loading","setLoading","a","get","encodeURI","toLowerCase","replace","cancelToken","c","catch","thrown","isCancel","console","error","data","results","useEffect","length","getAlbums","Album","album","href","collectionViewUrl","rel","bordered","cover","src","artworkUrl100","alt","Meta","title","collectionName","description","artistName","moment","releaseDate","format","Albums","map","key","collectionId","AppleOutlined","Title","App","Header","Content","document","getElementsByClassName","ReactDOM","render","getElementById"],"mappings":"iPAEaA,EAAgBC,wBAAc,IAE9BC,EAAwB,SAAUC,GAAQ,IAAD,EACdC,mBAAS,iBADK,mBAC7CC,EAD6C,KAChCC,EADgC,KAGpD,OACE,kBAACN,EAAcO,SAAf,CAAwBC,MAAO,CAAEH,cAAaC,mBAC3CH,EAAMM,W,SCLE,SAASC,IAAU,IACxBJ,EAAmBK,qBAAWX,GAA9BM,eAER,OACE,oCACE,kBAAC,IAAD,CACEM,UAAU,SAIVC,UAAW,SAACC,GACQ,KAAdA,EAAEC,SAAgBT,EAAeQ,EAAEE,OAAOR,QAEhDS,YAAY,gD,ICZhBC,E,2CADEC,EAAcC,IAAMD,YAGX,SAASE,IAAa,IAAD,EACNjB,mBAAS,IADH,mBAC3BkB,EAD2B,KACnBC,EADmB,OAEJnB,oBAAS,GAFL,mBAE3BoB,EAF2B,KAElBC,EAFkB,KAG1BpB,EAAgBM,qBAAWX,GAA3BK,YAH0B,4CAKlC,4BAAAqB,EAAA,6DACED,GAAW,GADb,SAEqBL,IAChBO,IADgB,+CAEyBC,UACtCvB,EAAYwB,eACZC,QAAQ,OAAQ,KAJH,iBAKf,CACEC,YAAa,IAAIZ,GAAY,SAACa,GAC5Bd,EAASc,OAIdC,OAAM,SAAUC,GACfT,GAAW,GACPL,IAAMe,SAASD,GACjBE,QAAQC,MAAM,oBAEdD,QAAQC,MAAMH,MAlBtB,OAEQI,EAFR,OAqBMpB,GACFA,IAEFO,GAAW,GAEPa,GAAQA,EAAKA,MAAQA,EAAKA,KAAKC,SAAShB,EAAUe,EAAKA,KAAKC,SA1BlE,4CALkC,sBAwClC,OANAC,qBAAU,WACJnC,EAAYoC,OAnCgB,mCAmCRC,GACnBnB,EAAU,MAEd,CAAClB,IAEG,CAAEiB,SAAQE,W,+BC3CJ,SAASmB,EAAT,GAA2B,IAAVC,EAAS,EAATA,MAC9B,OACE,uBAAGC,KAAMD,EAAME,kBAAmB9B,OAAO,SAAS+B,IAAI,uBACpD,kBAAC,IAAD,CACEC,UAAU,EACVC,MACE,yBACEC,IAAKN,EAAMO,cAAcrB,QAAQ,UAAW,WAC5CsB,IAAI,cACJxC,UAAU,WAId,kBAAC,IAAKyC,KAAN,CACEC,MAAOV,EAAMW,eACbC,YAAW,UAAKZ,EAAMa,WAAX,aAA0BC,IAAOd,EAAMe,aAAaC,OAC7D,a,uCCbG,SAASC,IAAU,IACxBxD,EAAgBM,qBAAWX,GAA3BK,YADuB,EAEHgB,IAApBC,EAFuB,EAEvBA,OAAQE,EAFe,EAEfA,QAGhB,OAAIF,EAAOmB,OAAS,EACXnB,EAAOwC,KAAI,SAAClB,GACjB,OAAO,kBAACD,EAAD,CAAOC,MAAOA,EAAOmB,IAAKnB,EAAMoB,kBAIvCxC,EAAgB,kBAAC,IAAD,MAGhBnB,EAAYoC,OAAS,EAAU,kBAAC,IAAD,CAAOe,YAAY,oBAIpD,yBAAK5C,UAAU,mBACb,kBAACqD,EAAA,EAAD,MACA,kBAAC,IAAWC,MAAZ,kD,sBCvBS,SAASC,IACtB,OACE,kBAAC,IAAD,CAAQvD,UAAU,SAChB,kBAAC,IAAOwD,OAAR,KACE,yBAAKxD,UAAU,QAAf,uBACA,kBAACF,EAAD,OAEF,kBAAC,IAAO2D,QAAR,KACE,yBAAKzD,UAAU,UACb,kBAACiD,EAAD,OAEF,kBAAC,IAAD,CACE7C,OAAQ,kBACNsD,SAASC,uBAAuB,sBAAsB,Q,cCVlEC,IAASC,OACP,kBAAC,EAAD,KACE,kBAACN,EAAD,OAEFG,SAASI,eAAe,W","file":"static/js/main.8845be8e.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\r\n\r\nexport const SearchContext = createContext({});\r\n\r\nexport const SearchContextProvider = function (props) {\r\n  const [searchInput, setSearchInput] = useState(\"Rascal Flatts\");\r\n\r\n  return (\r\n    <SearchContext.Provider value={{ searchInput, setSearchInput }}>\r\n      {props.children}\r\n    </SearchContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport { SearchContext } from \"../contexts/Search\";\r\n\r\nexport default function Search() {\r\n  const { setSearchInput } = useContext(SearchContext);\r\n\r\n  return (\r\n    <>\r\n      <Input\r\n        className=\"search\"\r\n        // Input originally would search on every keypress, but due to the api's 20 calls per minute limit this lead to many 403s\r\n        // value={searchInput}\r\n        // onChange={(e) => setSearchInput(e.target.value)}\r\n        onKeyDown={(e) => {\r\n          if (e.keyCode === 13) setSearchInput(e.target.value);\r\n        }}\r\n        placeholder=\"Enter your favorite artist and press Enter\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { useContext, useState, useEffect } from \"react\";\r\nimport { SearchContext } from \"../contexts/Search\";\r\nimport axios from \"axios\";\r\n\r\nconst CancelToken = axios.CancelToken;\r\nvar cancel;\r\n\r\nexport default function useSearch() {\r\n  const [albums, setAlbums] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const { searchInput } = useContext(SearchContext);\r\n\r\n  async function getAlbums() {\r\n    setLoading(true);\r\n    const data = await axios\r\n      .get(\r\n        `https://itunes.apple.com/search?term=${encodeURI(\r\n          searchInput.toLowerCase()\r\n        ).replace(/%20/g, \"+\")}&entity=album`,\r\n        {\r\n          cancelToken: new CancelToken((c) => {\r\n            cancel = c;\r\n          }),\r\n        }\r\n      )\r\n      .catch(function (thrown) {\r\n        setLoading(false);\r\n        if (axios.isCancel(thrown)) {\r\n          console.error(\"Request canceled\");\r\n        } else {\r\n          console.error(thrown);\r\n        }\r\n      });\r\n    if (cancel) {\r\n      cancel();\r\n    }\r\n    setLoading(false);\r\n    // cancel the request (the message parameter is optional)\r\n    if (data && data.data && data.data.results) setAlbums(data.data.results);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (searchInput.length) getAlbums();\r\n    else setAlbums([]);\r\n    // eslint-disable-next-line\r\n  }, [searchInput]);\r\n\r\n  return { albums, loading };\r\n}\r\n","import React from \"react\";\r\nimport { Card } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nexport default function Album({ album }) {\r\n  return (\r\n    <a href={album.collectionViewUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      <Card\r\n        bordered={false}\r\n        cover={\r\n          <img\r\n            src={album.artworkUrl100.replace(\"100x100\", \"300x300\")}\r\n            alt=\"Album Cover\"\r\n            className=\"cover\"\r\n          />\r\n        }\r\n      >\r\n        <Card.Meta\r\n          title={album.collectionName}\r\n          description={`${album.artistName}, ${moment(album.releaseDate).format(\r\n            \"YYYY\"\r\n          )}`}\r\n        />\r\n      </Card>\r\n    </a>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { SearchContext } from \"../contexts/Search\";\r\nimport useSearch from \"../hooks/useSearch\";\r\nimport Album from \"./Album\";\r\nimport { Empty, Typography, Spin } from \"antd\";\r\nimport { AppleOutlined } from \"@ant-design/icons\";\r\n\r\nexport default function Albums() {\r\n  const { searchInput } = useContext(SearchContext);\r\n  const { albums, loading } = useSearch();\r\n\r\n  // When albums are loaded\r\n  if (albums.length > 0)\r\n    return albums.map((album) => {\r\n      return <Album album={album} key={album.collectionId} />;\r\n    });\r\n\r\n  // If loading\r\n  if (loading) return <Spin />;\r\n\r\n  // If there's no result\r\n  if (searchInput.length > 0) return <Empty description=\"No Albums Found\" />;\r\n\r\n  // Default\r\n  return (\r\n    <div className=\"apple-container\">\r\n      <AppleOutlined />\r\n      <Typography.Title>\r\n        Enter an artist's name, then press Enter\r\n      </Typography.Title>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Albums, Search } from \"./components\";\r\nimport { Layout, BackTop } from \"antd\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Layout className=\"theme\">\r\n      <Layout.Header>\r\n        <div className=\"logo\">iTunes Album Viewer</div>\r\n        <Search />\r\n      </Layout.Header>\r\n      <Layout.Content>\r\n        <div className=\"albums\">\r\n          <Albums />\r\n        </div>\r\n        <BackTop\r\n          target={() =>\r\n            document.getElementsByClassName(\"ant-layout-content\")[0]\r\n          }\r\n        />\r\n      </Layout.Content>\r\n    </Layout>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { SearchContextProvider } from \"./contexts/Search\";\r\nimport App from \"./App\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./css/app.css\";\r\n\r\nReactDOM.render(\r\n  <SearchContextProvider>\r\n    <App />\r\n  </SearchContextProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}